name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:


      - name: Publish to GitHub Packages private
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISTRO_MAVEN: 167 # maven java packages
          PACKAGECLOUD_REPO: 'sarahBuisson/sarahbuisson'
        run: |
          ARTIFACTS=(M3 M4)
          ARTIFACT_TYPE=(js jvm)

          DISTRO_MAVEN_FOR_TYPE() {
              case $1 in
                  'jvm') echo '167';;
                  'js') echo '167';;
                  'C3') echo 'ccc';;
                  *) echo 'zzz';;
              esac
          }


          for ART_TYPE in "${ARTIFACTS[@]}"
          do
             :
          for ART_TYPE in "${ARTIFACT_TYPE[@]}"
                   do
                      :


                  echo "$ART_TYPE $ART_TYPE"
          done
          done



      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build
        run: gradle build
      - name: Build reportDir
        env:
          buildReportsDir: "buildReports"
          branchName: "branch"
        run: |
          gradle jacocoTestReport
          mkdir ${{env.buildReportsDir}}
          cat > ${{env.buildReportsDir}}/index.html <<EOL
          <!doctype html>
          <html>
          <head>
           <title>GitHub reports deployed!</title>
          </head>
          <body>
           <p>GitHub Pages with <strong>${{ github.sha }}</strong> commit ID has been deployed through <a href="https://github.com/marketplace/actions/github-pages">GitHub Pages action</a> successfully.</p>
          <p>jacocoReports:

          <a href="${{env.branchName}}/M3/jacoco/reports/index.html">M3</a>
          <a href="${{env.branchName}}/M4/jacoco/reports/index.html">M4</a>
          </p>
          <p>
          artifacts:
          <ul>
          <li></li></ul>
          </p>
          </body>
          </html>
          EOL
      - name: move into reports
        env:
          buildReportsDir: "buildReports"
          branchName:  "branch"

        run: |
          mkdir -p ${{env.buildReportsDir}}/${{env.branchName}}/reports/M3
          mkdir -p ${{env.buildReportsDir}}/${{env.branchName}}/reports/M4
          cp -b -r M3/build/reports ${{env.buildReportsDir}}/${{env.branchName}}/reports/M3/jacoco;
          cp -b -r M4/build/reports ${{env.buildReportsDir}}/${{env.branchName}}/reports/M4/jacoco;

      - name: publish test coverage
        if: success()
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: "buildReports"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: extract build version
        run: |
          gradle generatePomFileForKotlinMultiplatformPublication
          echo "::set-env name=BUILD_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -f M3/build/publications/kotlinMultiplatform/pom-default.xml -DforceStdout)"
          echo "::set-env name=BUILD_ARTIFACT_ID::$(mvn help:evaluate -Dexpression=project.artifactId -q -f M3/build/publications/kotlinMultiplatform/pom-default.xml -DforceStdout)"
          echo "::set-env name=BUILD_GROUP_ID::$(mvn help:evaluate -Dexpression=project.groupId -q -f M3/build/publications/kotlinMultiplatform/pom-default.xml -DforceStdout)"

      - if: contains(env.BUILD_VERSION, 'SNAPSHOT')
        name: Publish to GitHub Packages private
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISTRO_MAVEN: 167 # maven java packages
          PACKAGECLOUD_REPO: 'sarahBuisson/sarahbuisson'
        run: |
          ARTIFACTS=(M3 M4)
          ARTIFACT_TYPE=(js jvm)

          DISTRO_MAVEN_FOR_TYPE() {
              case $1 in
                  'jvm') echo '167';;
                  'js') echo '167';;
                  'C3') echo 'ccc';;
                  *) echo 'zzz';;
              esac
          }


          for ARTIFACT in "${ARTIFACTS[@]}"
          do
             :
          for ART_TYPE in "${ARTIFACT_TYPE[@]}"
                   do
                      :

                    DISTRO_MAVEN=$(DISTRO_MAVEN_FOR_TYPE ART_TYPE)
                    FILE_NAME='${ARTIFACTS}-${ART_TYPE}-${{env.BUILD_VERSION}}.jar'
                    FILE_PATH='@$ARTIFACTS/build/libs/$FILE_NAME'
                    COORDINATES: '${{env.BUILD_GROUP_ID}}:${ART_TYPE}-$ART_TYPE:${{env.BUILD_VERSION}}'
                    #delete previous version
                    curl -X DELETE "https://${{secrets.REPO_PACKAGE_KEY}}@packagecloud.io/api/v1/repos/${{env.PACKAGECLOUD_REPO}}/java/maven2/${{env.BUILD_GROUP_ID}}/$FILE_NAME" || true
                      #save new version
                    curl -X POST -F "package[distro_version_id]=${{env.DISTRO_MAVEN}}" -F "package[package_file]=${FILE_PATH}" -F "package[coordinates]=${{env.COORDINATES}}"  "https://${{secrets.REPO_PACKAGE_KEY}}@packagecloud.io/api/v1/repos/${{env.PACKAGECLOUD_REPO}}/packages.json"

          done
          done

      - if: false == contains(env.BUILD_VERSION, 'SNAPSHOT')
        name: Publish to GitHub Packages
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO_URL: ${{ github.repository }}
        run: gradle  build publish
