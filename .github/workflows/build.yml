name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build
        run: gradle build
      - name: Build reportDir
        env:
          buildReportsDir: "buildReports"
          branchName: "branch"
        run: |
          gradle jacocoTestReport
          mkdir ${{env.buildReportsDir}}
          cat > ${{env.buildReportsDir}}/index.html <<EOL
          <!doctype html>
          <html>
          <head>
           <title>GitHub reports deployed!</title>
          </head>
          <body>
           <p>GitHub Pages with <strong>${{ github.sha }}</strong> commit ID has been deployed through <a href="https://github.com/marketplace/actions/github-pages">GitHub Pages action</a> successfully.</p>
          <p>jacocoReports:

          <a href="${{env.branchName}}/reports/M3/jacoco">M3</a>
          <a href="/${{env.branchName}}/reports/M4/jacoco">M4</a>
          </p>
          <p>
          artifacts:
          <ul>
          <li></li></ul>
          </p>
          </body>
          </html>
          EOL
      - name: move into reports
        env:
          buildReportsDir: "buildReports"
          branchName:  "branch"

        run: |
          mkdir -p ${{env.buildReportsDir}}/${{env.branchName}}/reports/M3
          mkdir -p ${{env.buildReportsDir}}/${{env.branchName}}/reports/M4
          cp -b -r M3/build/reports ${{env.buildReportsDir}}/${{env.branchName}}/reports/M3/jacoco;
          cp -b -r M4/build/reports ${{env.buildReportsDir}}/${{env.branchName}}/reports/M4/jacoco;

      - name: publish test coverage
        if: success()
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-reports
          build_dir: "buildReports"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v2-preview
        with:
          name: npm-M3
          path: M3/build/npm/M3-npm-*.jar
      - uses: actions/upload-artifact@v2-preview
        with:
          name: npm-M4
          path: M4/build/npm/M4-npm-*.jar

      - uses: actions/upload-artifact@v2-preview
        with:
          name: reports-jacoco
          path:  ./**/build/reports/

      - name: extract build version
        run: |
          gradle generatePomFileForKotlinMultiplatformPublication
          echo "::set-env name=BUILD_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -f M3/build/publications/kotlinMultiplatform/pom-default.xml -DforceStdout)"
          echo "::set-env name=BUILD_ARTIFACT_ID::$(mvn help:evaluate -Dexpression=project.artifactId -q -f M3/build/publications/kotlinMultiplatform/pom-default.xml -DforceStdout)"

      - if: contains(env.BUILD_VERSION, 'SNAPSHOT')
        name: Publish to GitHub Packages private
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO_URL: 'sarahBuisson/kotlin-multiplatform-multiproject-sample'
          DISTRO_MAVEN: 167
          PACKAGECLOUD_REPO: 'sarahBuisson/sarahbuisson'
          GROUPID: 'somewhere'
        run: |
          echo ${{github.repository}}
          echo ${{env.GITHUB_REPO_URL}}
          echo ${{env.DISTRO_MAVEN}}
          echo ${{env.PACKAGECLOUD_REPO}}
          echo ${{env.GROUPID}}
          curl -X DELETE "https://${{secrets.REPO_PACKAGE_KEY}}@packagecloud.io/api/v1/repos/${{env.PACKAGECLOUD_REPO}}/java/maven2/${{env.GROUPID}}/${{env.BUILD_ARTIFACT_ID}}-SNAPSHOT.jar" || true
          curl -X POST -F "package[distro_version_id]=${{env.DISTRO_MAVEN}}" -F "package[package_file]=@M3/build/libs/{{env.BUILD_ARTIFACT_ID}}-${{env.BUILD_VERSION}}.jar" -F "package[coordinates]=${{env.GROUPID}}:${{env.ARTIFACTID}}:SNAPSHOT"  "https://${{secrets.REPO_PACKAGE_KEY}}@packagecloud.io/api/v1/repos/${{env.PACKAGECLOUD_REPO}}/packages.json

      - if: false == contains(env.BUILD_VERSION, 'SNAPSHOT')
        name: Publish to GitHub Packages
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO_URL: ${{ github.repository }}
        run: gradle  build publish
